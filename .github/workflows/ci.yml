name: CI
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  golang-tests:
    name: Go unit tests
    timeout-minutes: 30
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    env:
      TOOLS_PATH: "/opt/tools/bin"
    steps:
      - name: Set up Go release
        uses: percona-platform/setup-go@v2

      - name: Check out code into the Go module directory
        uses: percona-platform/checkout@v2

      - name: Install tools
        run: |
          mkdir -p $TOOLS_PATH
          echo $TOOLS_PATH >> $GITHUB_PATH
          curl -LO https://dl.k8s.io/release/v$KUBECTL_VERSION/bin/linux/amd64/kubectl
          curl -LO "https://dl.k8s.io/v$KUBECTL_VERSION/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          chmod +x kubectl
          cp kubectl "$TOOLS_PATH"
          rm kubectl
        env:
          KUBECTL_VERSION: 1.23.6
      - name: Run tests
        run:
          make test
        env:
          PXC_OPERATOR_VERSION: 1.11.0

  kind-e2e-tests:
    name: E2E tests (Kind)
    timeout-minutes: 30
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    env:
      TOOLS_PATH: "/opt/tools/bin"
    steps:
      - name: Set up Go release
        uses: percona-platform/setup-go@v2

      - name: Check out code into the Go module directory
        uses: percona-platform/checkout@v2

      - name: Build operator
        run:
          make build

      - name: Install tools
        run: |
          mkdir -p $TOOLS_PATH
          echo $TOOLS_PATH >> $GITHUB_PATH
          # Kubectl
          curl -LO https://dl.k8s.io/release/v$KUBECTL_VERSION/bin/linux/amd64/kubectl
          curl -LO "https://dl.k8s.io/v$KUBECTL_VERSION/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          chmod +x kubectl
          cp kubectl "$TOOLS_PATH"
          rm kubectl
          # Kind
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64
          chmod +x ./kind
          mv ./kind "$TOOLS_PATH"
          # Kuttl
          curl -Lo ./kubectl-kuttl https://github.com/kudobuilder/kuttl/releases/download/v0.14.0/kubectl-kuttl_0.14.0_linux_x86_64
          chmod +x ./kubectl-kuttl
          mv ./kubectl-kuttl "$TOOLS_PATH"
        env:
          KUBECTL_VERSION: 1.23.6
      - name: Run tests
        run:
          kubectl kuttl test --start-kind --config ./e2e-tests/kuttl.yml
        env:
          PXC_OPERATOR_VERSION: 1.11.0

  imdb-mysql-test:
    name: Smoke test (IMDB) for MySQL
    timeout-minutes: 30
    strategy:
      fail-fast: true
    runs-on: ubuntu-latest
    env:
      TOOLS_PATH: "/opt/tools/bin"
    steps:
      - name: Set up Go release
        uses: percona-platform/setup-go@v2

      - name: Check out code into the Go module directory
        uses: percona-platform/checkout@v2

      - name: Build operator
        run:
          make build

      - name: Install tools
        run: |
          mkdir -p $TOOLS_PATH
          echo $TOOLS_PATH >> $GITHUB_PATH
          # Kubectl
          curl -LO https://dl.k8s.io/release/v$KUBECTL_VERSION/bin/linux/amd64/kubectl
          curl -LO "https://dl.k8s.io/v$KUBECTL_VERSION/bin/linux/amd64/kubectl.sha256"
          echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
          chmod +x kubectl
          cp kubectl "$TOOLS_PATH"
          rm kubectl
          # Kind
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64
          chmod +x ./kind
          mv ./kind "$TOOLS_PATH"
          # Kuttl
          curl -Lo ./kubectl-kuttl https://github.com/kudobuilder/kuttl/releases/download/v0.14.0/kubectl-kuttl_0.14.0_linux_x86_64
          chmod +x ./kubectl-kuttl
          mv ./kubectl-kuttl "$TOOLS_PATH"
        env:
          KUBECTL_VERSION: 1.23.6

      - name: Create kind cluster
        run: |
          kind create cluster --config ./e2e-tests/kind.yml

      - name: Hoffman test
        run: |
          kubectl apply -f https://raw.githubusercontent.com/percona/percona-xtradb-cluster-operator/v${PXC_OPERATOR_VERSION}/deploy/bundle.yaml -n "${NAMESPACE}"
          kubectl apply -f ./config/crd/bases/dbaas.percona.com_databaseclusters.yaml
          kubectl wait --for condition=Available=True deployments/percona-xtradb-cluster-operator
          ./bin/manager &
          mkdir /tmp/repos
          git clone --depth 1 https://github.com/dlwhittenbury/MySQL_IMDb_Project /tmp/repos/imdb
          kubectl apply -f ./e2e-tests/imdb/client.yml
          kubectl apply -f ./e2e-tests/imdb/pxc.yml
          sleep 10
          kubectl wait --for condition=Ready pxc/single-node
          cd /tmp/repos/imdb
          mkdir ./imdb_data && cd ./imdb_data
          # Download data
          wget https://datasets.imdbws.com/name.basics.tsv.gz
          wget https://datasets.imdbws.com/title.akas.tsv.gz
          wget https://datasets.imdbws.com/title.basics.tsv.gz
          wget https://datasets.imdbws.com/title.crew.tsv.gz
          wget https://datasets.imdbws.com/title.episode.tsv.gz
          wget https://datasets.imdbws.com/title.principals.tsv.gz
          wget https://datasets.imdbws.com/title.ratings.tsv.gz
          cd ..
          pip install pandas numpy
          python imdb_converter.py

          root_password=$(kubectl get secret pxc-sample-secrets -o jsonpath='{.data.root}'|base64 --decode)
          host=$(kubectl get db/single-node -o jsonpath='{.items[0].status.host}')
          kubectl exec -ti mysql-client -- mysql -uroot -p$root_password -h $host < /tmp/imdb/imdb-create-tables.sql
          kubectl exec -ti mysql-client -- mysql -uroot -p$root_password -h $host < /tmp/imdb/imdb-load-data.sql

        env:
          PXC_OPERATOR_VERSION: 1.11.0
      - name: Cleanup
        run: |
          kind delete cluster


